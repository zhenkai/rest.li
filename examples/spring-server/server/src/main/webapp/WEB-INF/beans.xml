<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
  default-lazy-init="true">

  <!-- This scan is only used to find the FortunesBean component. -->
  <context:component-scan base-package="com.example.fortune" />

  <!-- An InjectResourceFactory must be created.  It is ApplicationContextAware so
  must be instantiated via spring and then passed into rest.li -->
  <bean id="injectResourceFactory" class="com.linkedin.restli.server.spring.SpringInjectResourceFactory" />

  <!-- Example of how to add filters,  here we'll enable logging and snappy compression support -->
  <bean id="loggingFilter" class="com.linkedin.r2.filter.logging.SimpleLoggingFilter" />

  <bean id="compressionFilter" class="ServerCompressionFilter" >
    <constructor-arg value="snappy" />
  </bean>

  <bean id="filterChain" class="com.linkedin.r2.filter.FilterChains" factory-method="create">
    <constructor-arg>
      <list>
        <ref bean="loggingFilter"/>
        <ref bean="compressionFilter"/>
      </list>
    </constructor-arg>
  </bean>

  <!--
    In web.xml, HttpRequestHandlerServlet loads this "restliRequestHandler" spring bean as a servlet.  For details, see:
    http://static.springsource.org/spring-framework/docs/3.2.0.RC1/api/org/springframework/web/context/support/HttpRequestHandlerServlet.html
  -->
  <bean id="restliRequestHandler" class="com.linkedin.restli.server.spring.RestliHttpRequestHandler">
    <constructor-arg>
      <bean class="com.linkedin.restli.server.RestLiConfig">
        <property name="resourcePackageNames" value="com.example.fortune.impl" />
      </bean>
    </constructor-arg>
    <constructor-arg ref="injectResourceFactory" />
    <constructor-arg ref="filterChain" />
  </bean>
    
</beans>